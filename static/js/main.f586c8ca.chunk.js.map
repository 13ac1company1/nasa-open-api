{"version":3,"sources":["Earth.js","SpacePhoto.js","CurDate.js","App.js","index.js"],"names":["Earth","props","state","loading","nasaData","i","current_image","populatedArray","images","decrement","bind","increment","reset","a","fetch","response","json","data","this","setState","console","log","JSON","stringify","showImage","populateArray","json_data","result","x","push","length","src","date","charAt","image","alt","className","onClick","Component","SpacePhoto","title","url","explanation","CurDate","curDate","newDate","Date","year","getFullYear","month","getMonth","getDate","formatDate","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f586c8ca.chunk.js","sourcesContent":["\r\nimport React, { Component } from 'react'\r\nimport './App.css'\r\n\r\nexport class Earth extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    \r\n    this.state = {\r\n      loading: true,\r\n      nasaData: null,\r\n      i: 0,\r\n      current_image: null,\r\n      populatedArray: [],\r\n      images: []\r\n    }\r\n    this.decrement = this.decrement.bind(this)\r\n    this.increment = this.increment.bind(this)\r\n    this.reset = this.reset.bind(this)\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const url = 'https://api.nasa.gov/EPIC/api/natural?api_key=s3Ro78SfpZQASJOPCYH3Ggcoby7guKm2mVaqoDgq'\r\n    const response = await fetch(url)\r\n    const data = await response.json()\r\n    this.setState({\r\n      nasaData: data,\r\n      loading: false,\r\n    })    \r\n    console.log(JSON.stringify(this.state.nasaData[0]))\r\n    console.log(JSON.stringify(this.state.images[0]))    \r\n    this.showImage()\r\n    this.populateArray()\r\n  }\r\n  populateArray() {\r\n    let json_data = this.state.nasaData\r\n    let result = []\r\n    let x=0\r\n    for(x in json_data){\r\n      result.push([x, json_data[x]])      \r\n    }\r\n    this.setState({\r\n      populatedArray: result\r\n    })\r\n    console.log(result)\r\n  }\r\n  decrement() {    \r\n    if (this.state.i > 0) {\r\n      this.setState({\r\n        i: this.state.i - 1        \r\n      })      \r\n      this.showImage()\r\n    } else {\r\n      this.setState({\r\n        i: this.state.populatedArray.length - 1      \r\n      })     \r\n    }\r\n  }\r\n\r\n  increment() {\r\n    if (this.state.i < this.state.populatedArray.length - 1) {\r\n      this.setState({\r\n        i: this.state.i + 1\r\n      })\r\n      this.showImage()\r\n    } else {\r\n      this.setState({\r\n        i: 0\r\n      })\r\n      this.showImage()\r\n    }\r\n  }\r\n  reset() {\r\n    this.setState({\r\n      i: 0\r\n    })\r\n  }\r\n  showImage(){     \r\n    this.setState({      \r\n      images: [         \r\n        <div><img src={`https://api.nasa.gov/EPIC/archive/natural/20${this.state.nasaData[0].date.charAt(2)}${this.state.nasaData[0].date.charAt(3)}/${this.state.nasaData[0].date.charAt(5)}${this.state.nasaData[0].date.charAt(6)}/${this.state.nasaData[0].date.charAt(8)}${this.state.nasaData[0].date.charAt(9)}/png/${this.state.nasaData[this.state.i].image}.png?api_key=s3Ro78SfpZQASJOPCYH3Ggcoby7guKm2mVaqoDgq`} alt='' /><h6>{this.state.nasaData[1].date}</h6></div>          \r\n      ]\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className={`App`}>\r\n        <div>{this.state.loading || !this.state.nasaData ? (\r\n          <div className={`Loading`}>\r\n            Loading...\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <h1>Earth</h1>\r\n            <h4>{`${this.state.nasaData[0].date.charAt(5)}${this.state.nasaData[0].date.charAt(6)}`}/{`${this.state.nasaData[0].date.charAt(8)}${this.state.nasaData[0].date.charAt(9)}`}/20{`${this.state.nasaData[0].date.charAt(2)}${this.state.nasaData[0].date.charAt(3)}`}</h4>\r\n            <h6>These images were taken by NASA's EPIC camera onboard the NOAA DSCOVR spacecraft.</h6>\r\n            <div>\r\n              <div>{this.state.images[0]}</div>\r\n              <div>{this.state.i}</div>\r\n              <div>\r\n                <button onClick={this.decrement}>\r\n                  Prev\r\n                </button>\r\n                <button onClick={this.reset}>reset</button>\r\n                <button onClick={this.increment}>\r\n                  Next\r\n                </button>\r\n              </div>\r\n            </div>\r\n             <br/>\r\n          </div>\r\n        )}</div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Earth\r\n","import React, { Component } from 'react'\r\nimport '../src/App.css'\r\nclass SpacePhoto extends Component {\r\n  state = {\r\n    loading: true,\r\n    nasaData: null,\r\n  }\r\n  async componentDidMount() {\r\n    const url = 'https://api.nasa.gov/planetary/apod?api_key=s3Ro78SfpZQASJOPCYH3Ggcoby7guKm2mVaqoDgq'\r\n    const response = await fetch(url)\r\n    const data = await response.json()\r\n    this.setState({\r\n      nasaData: data, loading: false\r\n    })\r\n    console.log(data)\r\n  }\r\n  render() {\r\n\r\n    return (\r\n      <div className={`App`}>\r\n        <div>{this.state.loading || !this.state.nasaData ? (\r\n          <div className={`Loading`}>\r\n            Loading...\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div><h1>{this.state.nasaData.title}</h1></div>\r\n            <div><img src={this.state.nasaData.url} alt='' /></div>\r\n            {/* <div><video width='200px' height='200px' controls >\r\n                    <source src='https://www.youtube.com/embed/VYWjxvm14Pk?rel=0' type='video/WebM' ></source>\r\n                    </video></div> */}\r\n            <div>\r\n              {/* <iframe width=\"315\" height=\"315\"\r\n                src={`https://www.youtube.com/embed/VYWjxvm14Pk?rel=0autoplay=0&showinfo=0&controls=0`} title={`${this.state.nasaData.title}`}>\r\n              </iframe> */}\r\n            </div>\r\n            <div><h5>{this.state.nasaData.explanation}</h5></div>\r\n          </div>\r\n        )}</div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SpacePhoto\r\n","import React, { Component } from 'react'\r\n\r\nclass CurDate extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            curDate: 'null'\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        const newDate = new Date()\r\n        let year = newDate.getFullYear()\r\n        let month = newDate.getMonth() + 1\r\n        let date = newDate.getDate()\r\n        this.formatDate = year + '/' + month + '/' + date\r\n        console.log(this.formatDate)\r\n        this.setState({\r\n            curDate: this.formatDate\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.curDate}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CurDate\r\n","import React, { Component } from 'react'\nimport '../src/App.css'\nimport Earth from './Earth'\nimport SpacePhoto from './SpacePhoto'\nimport CurDate from './CurDate'\n\nclass App extends Component {\n  render(){\n    return(\n       <div className={`App`}>\n         <CurDate />\n         <SpacePhoto />\n         <Earth />\n       </div>    \n    )\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}